name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: backend
          tags: ghcr.io/${{ github.repository }}/backend:latest

      - name: Build proxy
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: proxy
          tags: ghcr.io/${{ github.repository }}/proxy:latest

      - name: Build cache
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: cache
          tags: ghcr.io/${{ github.repository }}/cache:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/srv/${{ github.repository }}/"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /srv/${{ github.repository }}
      
            # Write .env file from GitHub secrets
            cat > .env <<EOF
            IMAGE_NAMESPACE=ghcr.io/${{ github.repository }}
            STORE_SUFFIX=${{ secrets.STORE_SUFFIX }}
            ROOT_DB_NAME=${{ secrets.ROOT_DB_NAME }}
            ATLAS_URI=${{ secrets.ATLAS_URI }}
            STORAGE_URI=${{ secrets.STORAGE_URI }}
            STORAGE_REGION=${{ secrets.STORAGE_REGION }}
            STORAGE_USER=${{ secrets.STORAGE_USER }}
            STORAGE_PASSWORD=${{ secrets.STORAGE_PASSWORD }}
            STORAGE_BUCKET_NAME=${{ secrets.STORAGE_BUCKET_NAME }}
            DOMAIN=${{ secrets.DOMAIN }}
            ACME_EMAIL=${{ secrets.ACME_EMAIL }}
            EOF
      
            # Pull and restart containers
            docker compose --env-file .env pull
            docker compose --env-file .env up -d
