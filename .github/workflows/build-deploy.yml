name: Build & Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAMESPACE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
  BUILD_CACHE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/buildcache

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-app
          key: ${{ runner.os }}-buildx-app-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-app

      - name: Build backend
        uses: docker/build-push-action@v4
        with:
          context: .
          target: backend
          push: true
          tags: ${{ env.IMAGE_NAMESPACE }}/backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache-app 
          cache-to: type=local,dest=/tmp/.buildx-cache-app-new,mode=max

      - name: Build proxy
        uses: docker/build-push-action@v4
        with:
          context: .
          target: proxy
          push: true
          tags: ${{ env.IMAGE_NAMESPACE }}/proxy:latest
          cache-from: type=local,src=/tmp/.buildx-cache-app
          cache-to: type=local,dest=/tmp/.buildx-cache-app-new,mode=max

      - name: Build cache
        uses: docker/build-push-action@v4
        with:
          context: .
          target: cache
          push: true
          tags: ${{ env.IMAGE_NAMESPACE }}/cache:latest
          cache-from: type=local,src=/tmp/.buildx-cache-app
          cache-to: type=local,dest=/tmp/.buildx-cache-app-new,mode

      - name: APP::Move cache
        run: |
          rm -rf /tmp/.buildx-cache-app
          mv /tmp/.buildx-cache-app-new /tmp/.buildx-cache-app

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/srv/${{ github.event.repository.name }}/"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /srv/${{ github.event.repository.name }}
            cat > .env <<EOF
            IMAGE_NAMESPACE=${{ env.IMAGE_NAMESPACE }}
            STORE_SUFFIX=${{ secrets.STORE_SUFFIX }}
            ROOT_DB_NAME=${{ secrets.ROOT_DB_NAME }}
            ATLAS_URI=${{ secrets.ATLAS_URI }}
            STORAGE_URI=${{ secrets.STORAGE_URI }}
            STORAGE_REGION=${{ secrets.STORAGE_REGION }}
            STORAGE_USER=${{ secrets.STORAGE_USER }}
            STORAGE_PASSWORD=${{ secrets.STORAGE_PASSWORD }}
            STORAGE_BUCKET_NAME=${{ secrets.STORAGE_BUCKET_NAME }}
            DOMAIN=${{ secrets.DOMAIN }}
            ACME_EMAIL=${{ secrets.ACME_EMAIL }}
            EOF
            docker compose --env-file .env pull
            docker compose --env-file .env up -d
