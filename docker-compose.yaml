services:
  backend:
    image: ${IMAGE_NAMESPACE}/backend:latest
    container_name: backend
    restart: always
    networks:
      - backend_net
    environment:
      - STORE_SUFFIX=${STORE_SUFFIX}
      - ROOT_DB_NAME=${ROOT_DB_NAME}
      - ATLAS_URI=${ATLAS_URI}
      - STORAGE_URI=${STORAGE_URI}
      - STORAGE_REGION=${STORAGE_REGION}
      - STORAGE_USER=${STORAGE_USER}
      - STORAGE_PASSWORD=${STORAGE_PASSWORD}
      - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}

  cache:
    image: ${IMAGE_NAMESPACE}/cache:latest
    container_name: cache
    restart: always
    networks:
      - backend_net

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    networks:
      - backend_net
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    volumes:
      - minio_data:/data

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    networks:
      - backend_net
    volumes:
      - mongo_data:/data/db

  caddy: &caddy_base
    image: ${IMAGE_NAMESPACE}/proxy:latest
    container_name: proxy
    restart: always
    networks:
      - backend_net
    environment:
      - DOMAIN=${DOMAIN}
      - ACME_EMAIL=${ACME_EMAIL}
      - STORE_SUFFIX=${STORE_SUFFIX}
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.caddy.entrypoints=websecure"
      - "traefik.tcp.routers.caddy.rule=HostSNI(`benxo.test`) || HostSNIRegexp(`.*\\.mystore.benxo.test`)"
      - "traefik.tcp.routers.caddy.tls.passthrough=true"
      - "traefik.tcp.services.caddy.loadbalancer.server.port=443"
      - "traefik.tcp.routers.caddy-catchall.entrypoints=websecure"
      - "traefik.tcp.routers.caddy-catchall.rule=HostSNIRegexp(`.*`)"
      - "traefik.tcp.routers.caddy-catchall.priority=1"
      - "traefik.tcp.routers.caddy-catchall.tls.passthrough=true"
      - "traefik.tcp.routers.caddy-catchall.service=caddy"
    # HTTP configurations
    # - "traefik.http.routers.http-catchall.entrypoints=web"
    # - "traefik.http.routers.http-catchall.rule=PathPrefix(`/`)"
    # - "traefik.http.routers.http-catchall.priority=1"
    # - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
    # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    # - "traefik.http.middlewares.redirect-to-https.redirectscheme.port=443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  caddy-standalone:
    <<: *caddy_base
    container_name: caddy-standalone
    ports:
      - "80:80"
      - "443:443"
    labels: []
    profiles:
      - "standalone"

networks:
  backend_net:

volumes:
  minio_data:
  mongo_data:
  caddy_data:
  caddy_config:
