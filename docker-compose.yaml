services:
  backend:
    build:
      context: .
      target: backend
    container_name: backend
    restart: always
    networks:
      - backend_net
    expose:
      - "8080"
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

  varnish:
    image: varnish:6
    container_name: varnish
    restart: always
    networks:
      - backend_net
    depends_on:
      - backend
    volumes:
      - ./varnish.vcl:/etc/varnish/default.vcl:ro

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    networks:
      - backend_net
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    volumes:
      - minio_data:/data

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    networks:
      - backend_net
    volumes:
      - mongo_data:/data/db

  caddy:
    build:
      context: .
      target: proxy
    container_name: proxy
    restart: always
    networks:
      - backend_net
    environment:
      - DOMAIN=${DOMAIN}
      - ACME_EMAIL=${ACME_EMAIL}
      - STORE_SUFFIX=${STORE_SUFFIX}
    labels:
      - "traefik.enable=${CADDY_STANDALONE:-true}"
      - "traefik.tcp.routers.caddy.entrypoints=websecure"
      - "traefik.tcp.routers.caddy.rule=HostSNI(`benxo.test`) || HostSNIRegexp(`.*\\.mystore.benxo.test`)"
      - "traefik.tcp.routers.caddy.tls.passthrough=true"
      - "traefik.tcp.services.caddy.loadbalancer.server.port=443"
      - "traefik.tcp.routers.caddy-catchall.entrypoints=websecure"
      - "traefik.tcp.routers.caddy-catchall.rule=HostSNIRegexp(`.*`)"
      - "traefik.tcp.routers.caddy-catchall.priority=1"
      - "traefik.tcp.routers.caddy-catchall.tls.passthrough=true"
      - "traefik.tcp.routers.caddy-catchall.service=caddy"
      # HTTP configurations
      # - "traefik.http.routers.http-catchall.entrypoints=web"
      # - "traefik.http.routers.http-catchall.rule=PathPrefix(`/`)"
      # - "traefik.http.routers.http-catchall.priority=1"
      # - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.port=443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
  caddy-standalone:
    extends:
      service: caddy
    container_name: caddy-standalone
    ports:
      - "80:80"
      - "443:443"
    labels: []
    profiles:
      - "standalone"

networks:
  backend_net:

volumes:
  minio_data:
  mongo_data:
  caddy_data:
  caddy_config:
